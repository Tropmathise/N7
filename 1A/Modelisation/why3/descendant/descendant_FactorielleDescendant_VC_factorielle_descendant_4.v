(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.

Parameter factorielle: Z -> Z.

Axiom factorielle_zero : ((factorielle 0%Z) = 1%Z).

Axiom factorielle_succ :
  forall (n:Z), (0%Z < n)%Z ->
  ((factorielle n) = (n * (factorielle (n - 1%Z)%Z))%Z).

(* Why3 assumption *)
Inductive ref (a:Type) :=
  | mk_ref : a -> ref a.
Axiom ref_WhyType : forall (a:Type) {a_WT:WhyType a}, WhyType (ref a).
Existing Instance ref_WhyType.
Arguments mk_ref {a}.

(* Why3 assumption *)
Definition contents {a:Type} {a_WT:WhyType a} (v:ref a) : a :=
  match v with
  | mk_ref x => x
  end.

Parameter n: Z.

Axiom H : (0%Z <= n)%Z.

Parameter r: Z.

Parameter i: Z.

Axiom H1 : ((r * (factorielle i))%Z = (factorielle n)).

Axiom H2 : (0%Z < i)%Z.

Parameter r1: Z.

Axiom H3 : (r1 = (i * r)%Z).

Parameter i1: Z.

Axiom H4 : (i1 = (i - 1%Z)%Z).

(* Why3 goal *)
Theorem VC_factorielle_descendant :
  ((r1 * (factorielle i1))%Z = (factorielle n)).
Proof.
rewrite H3.
rewrite H4.
rewrite <- H1.
rewrite (factorielle_succ i).
ring.
apply H2.

Qed.

