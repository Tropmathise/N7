#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-23-gd0ede4 (http://www.spinellis.gr/umlgraph/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// Observateur
	c0 [label=<<table title="Observateur" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Observateur </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + maj(source : Point, dx : double, dy : double) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Segment
	c1 [label=<<table title="Segment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Segment </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - extremite1 : Point </td></tr>
<tr><td align="left" balign="left"> - extremite2 : Point </td></tr>
<tr><td align="left" balign="left"> - longueur : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Segment(ext1 : Point, ext2 : Point) </td></tr>
<tr><td align="left" balign="left"> + getLongueur() : double </td></tr>
<tr><td align="left" balign="left"> + translater(dx : double, dy : double) </td></tr>
<tr><td align="left" balign="left"> + afficher() </td></tr>
<tr><td align="left" balign="left"> - majLongueur() </td></tr>
<tr><td align="left" balign="left"> + detruire() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Segment.MajLongueur
	c2 [label=<<table title="Segment.MajLongueur" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MajLongueur </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MajLongueur() </td></tr>
<tr><td align="left" balign="left"> + maj(source : Point, dx : double, dy : double) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Point
	c3 [label=<<table title="Point" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Point </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - x : double </td></tr>
<tr><td align="left" balign="left"> - y : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Point(x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + getX() : double </td></tr>
<tr><td align="left" balign="left"> + getY() : double </td></tr>
<tr><td align="left" balign="left"> + distance(autre : Point) : double </td></tr>
<tr><td align="left" balign="left"> + translater(dx : double, dy : double) </td></tr>
<tr><td align="left" balign="left"> + afficher() </td></tr>
<tr><td align="left" balign="left"> + inscrire(s : Observateur) </td></tr>
<tr><td align="left" balign="left"> + annuler(s : Observateur) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Cercle
	c4 [label=<<table title="Cercle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Cercle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - centre : Point </td></tr>
<tr><td align="left" balign="left"> - rayon : double </td></tr>
<tr><td align="left" balign="left"> - circonference : Point </td></tr>
<tr><td align="left" balign="left"> - translaterObservateur : Observateur </td></tr>
<tr><td align="left" balign="left"> - redimensionnerObservateur : Observateur </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Cercle(centre : Point, circonference : Point) </td></tr>
<tr><td align="left" balign="left"> + detruire() </td></tr>
<tr><td align="left" balign="left"> + getRayon() : double </td></tr>
<tr><td align="left" balign="left"> + afficher() </td></tr>
<tr><td align="left" balign="left"> + translater(dx : double, dy : double) </td></tr>
<tr><td align="left" balign="left"> + getPerimetre() : double </td></tr>
<tr><td align="left" balign="left"> + getSurface() : double </td></tr>
<tr><td align="left" balign="left"> - majRayon() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Cercle.Translater
	c5 [label=<<table title="Cercle.Translater" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Translater </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Translater() </td></tr>
<tr><td align="left" balign="left"> + maj(source : Point, dx : double, dy : double) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Cercle.Redimmensionner
	c6 [label=<<table title="Cercle.Redimmensionner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Redimmensionner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Redimmensionner() </td></tr>
<tr><td align="left" balign="left"> + maj(source : Point, dx : double, dy : double) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// GroupeObservateurs
	c7 [label=<<table title="GroupeObservateurs" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;container&#187; </td></tr>
<tr><td align="center" balign="center"> GroupeObservateurs </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - observateurs : List&lt;Observateur&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GroupeObservateurs() </td></tr>
<tr><td align="left" balign="left"> + maj(source : Point, dx : double, dy : double) </td></tr>
<tr><td align="left" balign="left"> + ajouter(unObservateur : Observateur) </td></tr>
<tr><td align="left" balign="left"> + supprimer(unObservateur : Observateur) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Segment HAS Point
	c1:p -> c3:p [taillabel="*", label="", headlabel="2\nextrémité1, extrémité2", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=ediamond, dir=both];
	// Segment DEPEND Segment.MajLongueur
	c1:p -> c2:p [taillabel="", label="&#171;instantiate&#187;", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	//Segment.MajLongueur implements Observateur
	c0:p -> c2:p [dir=back,arrowtail=empty,style=dashed];
	// Point COMPOSED GroupeObservateurs
	c3:p -> c7:p [taillabel="1", label="", headlabel="1 observateurs", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// Cercle HAS Point
	c4:p -> c3:p [taillabel="*", label="", headlabel="2\ncentre, circonférence", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=ediamond, dir=both];
	// Cercle DEPEND Cercle.Translater
	c4:p -> c5:p [taillabel="", label="&#171;instantiate&#187;", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// Cercle DEPEND Cercle.Redimmensionner
	c4:p -> c6:p [taillabel="", label="&#171;instantiate&#187;", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	//Cercle.Translater implements Observateur
	c0:p -> c5:p [dir=back,arrowtail=empty,style=dashed];
	//Cercle.Redimmensionner implements Observateur
	c0:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
	// GroupeObservateurs NAVASSOC Observateur
	c7:p -> c0:p [taillabel="*", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

