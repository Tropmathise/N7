// write your program here
N=10
add %r0,0x100,%r1 //adresse de base du tableau
add %r0,N-1,%r2 //iterateur premiere boucle
clr %r3 //iterateur deuxieme boucle

looptri:
        add %r2,-1,%r7 //r7 = r2 - 1
        clr %r3
        looptri2:
                add %r3,1,%r8 //r8 = r3+1
                ld [%r1+%r3],%r4 //echange des 2 registres
                ld [%r1+%r8],%r5
                cmp %r4,%r5
                ble FinSitri
                st %r4,[%r1+%r8]
                st %r5,[%r1+%r3]
                
                FinSitri: 
                inc %r3
                
                cmp %r3,%r7
                ble looptri2
        add %r2,-1,%r2
        cmp %r2,1
        bg looptri

add %r0, 0x200,%r2 //adresse du crible
add %r0, N-1, %r3 //borne itérateur
clr %r4 //1er itérateur
clr %r5 //2eme iterateur
clr %r6 //elim[i]
clr %r7 //T[i]
clr %r8 //x
clr %r9 //T[j]
clr %r10 //1
add %r0, N-2, %r15
loop1 :
      ld [%r2 + %r4], %r6 //load la r4ieme case de r2
      cmp %r0, %r6
      bne fin
        ld [%r1 + %r4], %r7 //load la r4ieme case de r1
        add %r0, %r7, %r8
        add %r4, 1, %r5 //i+1
        loop2: 
            ld [%r1+%r5], %r9
            while1 : 
                add %r8,%r7,%r8
                cmp %r8, %r9
                bl while1
            
            cmp %r8, %r9
            bne FinSi 
              st %r10, [%r2 + %r5]
            FinSi : 
            inc %r5
            cmp %r5, %r3
            ble loop2

      fin : 
      inc %r4 
      cmp %r4, %r15
      ble loop1
      
stop : ba stop

.org 0x100
.word 20,13,15,3,12,23,16,7,4,37

.org 0x200
.word 0,0,0,0,0,0,0,0,0,0