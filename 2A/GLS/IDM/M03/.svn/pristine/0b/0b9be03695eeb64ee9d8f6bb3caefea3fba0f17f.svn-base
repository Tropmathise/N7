// automatically generated by Xtext
grammar fr.n7.simplepdl.txt.SimplePDL with org.eclipse.xtext.common.Terminals

import "http://simplepdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Process returns Process:
	{Process}
	'Process'
	name=EString
	'{'
		('processElements' '{' processElements+=ProcessElement ( "," processElements+=ProcessElement)* '}' )?
	'}';

ProcessElement returns ProcessElement:
	ProcessElement_Impl | WorkDefinition | WorkSequence | Guidance | Resources;





EString returns ecore::EString:
	STRING | ID;

ProcessElement_Impl returns ProcessElement:
	{ProcessElement}
	'ProcessElement'
	;

WorkDefinition returns WorkDefinition:
	{WorkDefinition}
	'WorkDefinition'
	name=EString
	'{'
		('linksToPredecessors' '(' linksToPredecessors+=[WorkSequence|EString] ( "," linksToPredecessors+=[WorkSequence|EString])* ')' )?
		('linksToSuccessors' '(' linksToSuccessors+=[WorkSequence|EString] ( "," linksToSuccessors+=[WorkSequence|EString])* ')' )?
		('uses' '{' uses+=linksResources ( "," uses+=linksResources)* '}' )?
	'}';

WorkSequence returns WorkSequence:
	'WorkSequence'
	'{'
		'linkType' linkType=WorkSequenceType
		'predecessor' predecessor=[WorkDefinition|EString]
		'successor' successor=[WorkDefinition|EString]
	'}';

Guidance returns Guidance:
	'Guidance'
	'{'
		'text' text=EString
		('elements' '(' elements+=[ProcessElement|EString] ( "," elements+=[ProcessElement|EString])* ')' )?
	'}';

Resources returns Resources:
	'Resources'
	name=EString
	'{'
		'nbOccurence' nbOccurence=EInt
	'}';

linksResources returns linksResources:
	'linksResources'
	'{'
		'quantityNeeded' quantityNeeded=EInt
		'usedResources' usedResources=[Resources|EString]
		('workdefinition' workdefinition=[WorkDefinition|EString])?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

enum WorkSequenceType returns WorkSequenceType:
				startToStart = 'startToStart' | finishToStart = 'finishToStart' | startToFinish = 'startToFinish' | finishToFinish = 'finishToFinish';
