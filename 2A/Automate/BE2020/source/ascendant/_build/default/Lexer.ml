# 1 "Lexer.mll"
 

(* Partie recopiée dans le fichier CaML généré. *)
(* Ouverture de modules exploités dans les actions *)
(* Déclarations de types, de constantes, de fonctions, d'exceptions exploités dans les actions *)

  open Parser 
  exception LexicalError


# 13 "Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\239\255\240\255\002\000\001\000\000\000\001\000\004\000\
    \003\000\000\000\000\000\251\255\252\255\253\255\001\000\004\000\
    \000\000\000\000\001\000\009\000\006\000\250\255\007\000\010\000\
    \006\000\249\255\024\000\025\000\017\000\012\000\248\255\014\000\
    \243\255\019\000\022\000\247\255\246\255\245\255\001\000\018\000\
    \032\000\019\000\021\000\244\255\241\255\034\000\033\000\028\000\
    \030\000\242\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\016\000\016\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\255\255\255\255\255\255\001\000\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\014\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\255\255\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\015\000\015\000\255\255\000\000\015\000\015\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \015\000\000\000\000\000\014\000\015\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\011\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\016\000\039\000\017\000\022\000\008\000\007\000\045\000\
    \018\000\009\000\019\000\021\000\023\000\010\000\037\000\005\000\
    \036\000\026\000\003\000\004\000\006\000\038\000\033\000\020\000\
    \024\000\027\000\025\000\013\000\031\000\012\000\028\000\029\000\
    \030\000\032\000\034\000\035\000\041\000\044\000\040\000\042\000\
    \043\000\046\000\047\000\048\000\049\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\014\000\255\255\015\000\015\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\015\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\010\000\038\000\016\000\009\000\000\000\000\000\003\000\
    \017\000\000\000\018\000\020\000\022\000\000\000\005\000\000\000\
    \006\000\008\000\000\000\000\000\000\000\004\000\007\000\019\000\
    \023\000\008\000\024\000\000\000\026\000\000\000\027\000\028\000\
    \029\000\031\000\033\000\034\000\039\000\040\000\039\000\041\000\
    \042\000\045\000\046\000\047\000\048\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\014\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec lexer lexbuf =
   __ocaml_lex_lexer_rec lexbuf 0
and __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 23 "Lexer.mll"
                         ( (lexer lexbuf) )
# 136 "Lexer.ml"

  | 1 ->
# 24 "Lexer.mll"
                     ( (lexer lexbuf) )
# 141 "Lexer.ml"

  | 2 ->
# 25 "Lexer.mll"
              ( UL_ACCOUV )
# 146 "Lexer.ml"

  | 3 ->
# 26 "Lexer.mll"
              ( UL_ACCFER )
# 151 "Lexer.ml"

  | 4 ->
# 27 "Lexer.mll"
                    (UL_PT)
# 156 "Lexer.ml"

  | 5 ->
# 28 "Lexer.mll"
                 ( UL_MACHINE )
# 161 "Lexer.ml"

  | 6 ->
# 29 "Lexer.mll"
                    (UL_IDENT)
# 166 "Lexer.ml"

  | 7 ->
# 30 "Lexer.mll"
                    (UL_EVENT)
# 171 "Lexer.ml"

  | 8 ->
# 31 "Lexer.mll"
                    (UL_FROM)
# 176 "Lexer.ml"

  | 9 ->
# 32 "Lexer.mll"
                    (UL_TO)
# 181 "Lexer.ml"

  | 10 ->
# 33 "Lexer.mll"
                    (UL_ON)
# 186 "Lexer.ml"

  | 11 ->
# 34 "Lexer.mll"
                    (Ul_START)
# 191 "Lexer.ml"

  | 12 ->
# 35 "Lexer.mll"
                    (UL_ENDS)
# 196 "Lexer.ml"

  | 13 ->
# 36 "Lexer.mll"
                    (UL_REGION)
# 201 "Lexer.ml"

  | 14 ->
# 37 "Lexer.mll"
                    (UL_STATE)
# 206 "Lexer.ml"

  | 15 ->
# 38 "Lexer.mll"
              ( UL_FIN )
# 211 "Lexer.ml"

  | 16 ->
let
# 39 "Lexer.mll"
         texte
# 217 "Lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 39 "Lexer.mll"
                     ( (print_string "Erreur lexicale : ");(print_char texte);(print_newline ()); raise LexicalError )
# 221 "Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state

;;

# 41 "Lexer.mll"
 


# 232 "Lexer.ml"
